<?xml version="1.0" encoding="UTF-8"?>
<project name="MrPrompt\Cielo" default="build" basedir="./src">
    <tstamp/>

    <property name="application.docdir" value="${project.basedir}/../doc"/>
    <property name="application.library" value="${project.basedir}"/>
    <property name="application.tests" value="${project.basedir}/../tests"/>
    <property name="application.logdir" value="${project.basedir}/../log"/>
    
    <target name="build" description="faz tudo" 
            depends="prepare,clean,phploc,pdepend,phpmd,phpcs,phpcpd,phpunit,phpcb"/>
    
    <target name="prepare" description="Limpa os diretórios de logs">
        <mkdir dir="${application.logdir}/"/>
    </target>
    
    <target name="clean" description="Limpa os diretórios de logs">
        <delete>
          <fileset dir="${application.logdir}/">
            <include name="*" />
          </fileset>
        </delete>        
    </target>
    
    <target name="phploc" description="Mede o tamanho da aplicação" depends="prepare">
        <exec executable="phploc">
            <arg value="--log-xml" />
            <arg value="${application.logdir}/phploc.xml" />
            <arg path="${application.library}" />
        </exec>
    </target>

    <target name="pdepend" description="Calcula métricas de software" depends="prepare">
        <phpdepend haltonerror="true" debug="false">
            <fileset dir="${application.library}">
                <include name="**/*.php" />
            </fileset>

            <logger type="jdepend-xml" outfile="${application.logdir}/phpdepend.xml"/>
            <logger type="jdepend-chart" outfile="${application.logdir}/phpdepend.svg"/>
            <logger type="overview-pyramid" outfile="${application.logdir}/overview-pyramid.svg"/>

            <analyzer type="coderank-mode" value="method"/>
        </phpdepend>
    </target>

    <target name="phpmd" description="Detecção de bagunça de código" depends="prepare">
        <phpmd rulesets="codesize,design,naming,unusedcode">
            <fileset dir="${application.library}">
                <include name="**/*.php" />
            </fileset>

            <formatter type="xml" outfile="${application.logdir}/pmd.xml"/>
        </phpmd>
    </target>

    <target name="phpcs" description="Padrão de código" depends="prepare">
        <phpcodesniffer standard="PSR2" showWarnings="false" 
                        showSniffs="false" tabWidth="4" file="." 
                        docGenerator="Text" encoding="UTF-8" 
                        docFile="${application.logdir}/phpcs.txt"
                        haltonerror="false" haltonwarning="false"
                        allowedFileExtensions="php" />
    </target>

    <target name="phpcpd" description="Testa duplicação de código" 
            depends="prepare">
        <phpcpd>
            <fileset dir="${application.library}">
                <include name="**/*.php" />
            </fileset>

            <formatter type="pmd"  outfile="${application.logdir}/pmd-cpd.xml"/>
        </phpcpd>
    </target>

    <target name="phpunit" description="Testes Unitários" depends="prepare">
        <php expression="ini_set('memory_limit', -1);"/>
        <php expression="extension_loaded('xdebug');" returnProperty="xdebug"/>

        <if>
            <istrue value="${xdebug}"/>
                <then>
                    <coverage-setup database="${application.logdir}/coverage.db">
                        <fileset dir="${application.tests}">
                            <include name="**/*Test.php"/>
                        </fileset>
                    </coverage-setup>

                    <phpunit codecoverage="true" printsummary="true" haltonfailure="false" configuration="${application.tests}/../phpunit.xml">
                        <batchtest>
                            <fileset dir="${application.tests}">
                                <include name="**/*Test.php"/>
                            </fileset>
                        </batchtest>
                        <formatter type="clover" todir="${application.logdir}" outfile="phpunit.clover"/>
                        <formatter type="xml" todir="${application.logdir}" outfile="phpunit.xml"/>
                    </phpunit>

                    <coverage-report outfile="${application.logdir}/coverage.xml">
                        <report todir="${application.logdir}"/>
                    </coverage-report>
                </then>
            <else>
                <phpunit codecoverage="false" printsummary="true" haltonfailure="false" configuration="${application.tests}/../phpunit.xml">
                    <batchtest>
                        <fileset dir="${application.tests}">
                            <include name="**/*Test.php"/>
                        </fileset>
                    </batchtest>
                    <formatter type="clover" todir="${application.logdir}" outfile="phpunit.clover"/>
                    <formatter type="xml" todir="${application.logdir}" outfile="phpunit.xml"/>
                </phpunit>
            </else>
        </if>
        <phpunitreport infile="${application.logdir}/phpunit.xml" todir="${application.logdir}"/>
    </target>

    <target name="phpcb"  description="Cria a navegação de código" 
            depends="prepare">
        <exec executable="phpcb">
            <arg value="--log" />
            <arg path="${application.logdir}" />
            <arg value="--source" />
            <arg path="${application.library}" />
            <arg value="--output" />
            <arg path="${application.logdir}" />
        </exec>
    </target>

    <target name="phpdoc" description="Documentação do Cliente Cielo" 
            depends="prepare">
        <phpdoc title="MrPrompt\Cielo" destdir="${application.docdir}" 
                sourcecode="true" 
                output="HTML:Smarty:PHP" 
                quiet="true" 
                undocumentedelements="true">

            <fileset dir="${application.library}">
                <include name="**/*.php" />
            </fileset>
        </phpdoc>
    </target>
</project>
